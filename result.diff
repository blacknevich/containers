
=====================default_constructor=====================	=====================default_constructor=====================

empty() : 1							empty() : 1
size    : 0							size    : 0
capacity: 0							capacity: 0
arr     :							arr     :


=====================fill constructor=====================	=====================fill constructor=====================

empty() : 0							empty() : 0
size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 			0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 								0 0 

=====================fill with val constructor===============	=====================fill with val constructor===============

size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 			2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 			2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 								2 2 

=====================assign_node_no_value constructor========	=====================assign_node_no_value constructor========

size    : 42							size    : 42
capacity: 1000							capacity: 1000
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 

>>> action made: Copy of get_node made				>>> action made: Copy of get_node made
size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 

=====================resize=====================		=====================resize=====================

base_state: 42 vector filled with range				base_state: 42 vector filled with range

size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 

>>> action made: resize from 42 to 21 made with val 7		>>> action made: resize from 42 to 21 made with val 7
size    : 21							size    : 21
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 								20 

>>> action made: resize from 42 to 63 made with val 7		>>> action made: resize from 42 to 63 made with val 7
size    : 63							size    : 63
capacity: 84							capacity: 84
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 			40 41 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 								7 7 7 

>>> action made: resize from 63 to 0 made with val 7		>>> action made: resize from 63 to 0 made with val 7
size    : 0							size    : 0
capacity: 84							capacity: 84
arr     :							arr     :


>>> action made: resize from 42 to 100 made with val 7		>>> action made: resize from 42 to 100 made with val 7
size    : 100							size    : 100
capacity: 100							capacity: 100
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 			40 41 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 			7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 			7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 

>>> action made: resize from 42 to 102 made with val 7 where 	>>> action made: resize from 42 to 102 made with val 7 where 
size    : 102							size    : 102
capacity: 200							capacity: 200
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 			40 41 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 			7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 			7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 								7 7 

>>> action made: resize to more then max size			>>> action made: resize to more then max size
vector								vector
size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 

=====================reserve_test=====================		=====================reserve_test=====================

base_state: 42 vector filled with range and empty container	base_state: 42 vector filled with range and empty container


>>> action made: reserve 0 to both containers			>>> action made: reserve 0 to both containers
size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 
size    : 0							size    : 0
capacity: 0							capacity: 0
arr     :							arr     :


>>> action made: reserve 42 to both containers			>>> action made: reserve 42 to both containers
size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 
size    : 0							size    : 0
capacity: 42							capacity: 42
arr     :							arr     :


>>> action made: reserve 63 to 42 container			>>> action made: reserve 63 to 42 container
size    : 42							size    : 42
capacity: 63							capacity: 63
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 

>>> action made: reserve 150 to above container			>>> action made: reserve 150 to above container
size    : 42							size    : 42
capacity: 150							capacity: 150
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 

>>> action made: reserve more then max size to above		>>> action made: reserve more then max size to above
allocator<T>::allocate(size_t n) 'n' exceeds maximum supporte	allocator<T>::allocate(size_t n) 'n' exceeds maximum supporte
size    : 42							size    : 42
capacity: 150							capacity: 150
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 

=====================assignment operator test================	=====================assignment operator test================

base_state: 42 vector filled with range and empty container	base_state: 42 vector filled with range and empty container

size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 

>>> action made: are_values_equal get_node to empty container	>>> action made: are_values_equal get_node to empty container
size    : 0							size    : 0
capacity: 42							capacity: 42
arr     :							arr     :


>>> action made: are_values_equal empty to fool			>>> action made: are_values_equal empty to fool
size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 

=====================iterator_test=====================		=====================iterator_test=====================

base_state: 42 vector filled with range and empty container	base_state: 42 vector filled with range and empty container

size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 

>>> action made: dereferencing following iterators		>>> action made: dereferencing following iterators
begin: 0							begin: 0
end - 1: 41							end - 1: 41
rbegin: 41							rbegin: 41
rend - 1: 0							rend - 1: 0

>>> action made: same but vector is const and full of 7s now	>>> action made: same but vector is const and full of 7s now
begin: 7							begin: 7
end - 1: 7							end - 1: 7
rbegin: 7							rbegin: 7
rend - 1: 7							rend - 1: 7

>>> action made: iterator arithmetics end and begin if full	>>> action made: iterator arithmetics end and begin if full
difference: 42							difference: 42
show_begin + 1: 1						show_begin + 1: 1
1 + show_begin: 1						1 + show_begin: 1
++show_begin: 1							++show_begin: 1
--show_begin: 0							--show_begin: 0

=====================element access test=====================	=====================element access test=====================

base_state: 42 vector filled with range and empty container	base_state: 42 vector filled with range and empty container

size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 
base_state: empty vector					base_state: empty vector

size    : 0							size    : 0
capacity: 0							capacity: 0
arr     :							arr     :


>>> action made: at with exceeding range parameter		>>> action made: at with exceeding range parameter
vector								vector

>>> action made: taking address for empty and value for full	>>> action made: taking address for empty and value for full
Front full: 0							Front full: 0
Back full: 41							Back full: 41

=====================are_values_equal range test=============	=====================are_values_equal range test=============

base_state: 42 vector filled with range				base_state: 42 vector filled with range

size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 
base_state: empty vector					base_state: empty vector

size    : 0							size    : 0
capacity: 0							capacity: 0
arr     :							arr     :

base_state: empty vector with 100 capacity			base_state: empty vector with 100 capacity

size    : 0							size    : 0
capacity: 1000							capacity: 1000
arr     :							arr     :

base_state: 10 vector filled with range				base_state: 10 vector filled with range


=====================are_values_equal range test=============	=====================are_values_equal range test=============


>>> action made: are_values_equal full with range from empty	>>> action made: are_values_equal full with range from empty
size    : 0							size    : 0
capacity: 42							capacity: 42
arr     :							arr     :


>>> action made: are_values_equal empty with range from full 	>>> action made: are_values_equal empty with range from full 
size    : 32							size    : 32
capacity: 32							capacity: 32
arr     :							arr     :
5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 		5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
25 26 27 28 29 30 31 32 33 34 35 36 				25 26 27 28 29 30 31 32 33 34 35 36 
size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 

>>> action made: are_values_equal to full 42 from small vecto	>>> action made: are_values_equal to full 42 from small vecto
size    : 10							size    : 10
capacity: 42							capacity: 42
arr     :							arr     :
10 11 12 13 14 15 16 17 18 19 					10 11 12 13 14 15 16 17 18 19 
size    : 10							size    : 10
capacity: 10							capacity: 10
arr     :							arr     :
10 11 12 13 14 15 16 17 18 19 					10 11 12 13 14 15 16 17 18 19 

>>> action made: are_values_equal to big capacity empty from 	>>> action made: are_values_equal to big capacity empty from 
size    : 10							size    : 10
capacity: 1000							capacity: 1000
arr     :							arr     :
10 11 12 13 14 15 16 17 18 19 					10 11 12 13 14 15 16 17 18 19 

=====================are_values_equal range test=============	=====================are_values_equal range test=============


>>> action made: are_values_equal to full vector with range f	>>> action made: are_values_equal to full vector with range f
size    : 10							size    : 10
capacity: 42							capacity: 42
arr     :							arr     :
10 11 12 13 14 15 16 17 18 19 					10 11 12 13 14 15 16 17 18 19 
size    : 10							size    : 10
capacity: 42							capacity: 42
arr     :							arr     :
10 11 12 13 14 15 16 17 18 19 					10 11 12 13 14 15 16 17 18 19 

>>> action made: are_values_equal to vector above with range 	>>> action made: are_values_equal to vector above with range 
size    : 10							size    : 10
capacity: 42							capacity: 42
arr     :							arr     :
10 11 12 13 14 15 16 17 18 19 					10 11 12 13 14 15 16 17 18 19 
size    : 4							size    : 4
capacity: 42							capacity: 42
arr     :							arr     :
13 14 15 16 							13 14 15 16 

=====================are_values_equal range test=============	=====================are_values_equal range test=============


>>> action made: try to are_values_equal from incorrect range	>>> action made: try to are_values_equal from incorrect range
vector								vector
size    : 0							size    : 0
capacity: 0							capacity: 0
arr     :							arr     :


>>> action made: try to are_values_equal from above max size 	>>> action made: try to are_values_equal from above max size 
vector								vector
size    : 0							size    : 0
capacity: 0							capacity: 0
arr     :							arr     :


=====================are_values_equal fill test==============	=====================are_values_equal fill test==============

base_state: 42 vector filled with range				base_state: 42 vector filled with range

size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 
base_state: empty vector					base_state: empty vector

size    : 0							size    : 0
capacity: 0							capacity: 0
arr     :							arr     :

base_state: empty vector with 100 capacity			base_state: empty vector with 100 capacity

size    : 0							size    : 0
capacity: 1000							capacity: 1000
arr     :							arr     :


=====================are_values_equal fill test==============	=====================are_values_equal fill test==============


>>> action made: are_values_equal to empty with 42 sevens	>>> action made: are_values_equal to empty with 42 sevens
size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 			7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 			7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 								7 7 

>>> action made: are_values_equal to full with 42 sevens	>>> action made: are_values_equal to full with 42 sevens
size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 			7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 			7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 								7 7 

>>> action made: are_values_equal to big capacity empty with 	>>> action made: are_values_equal to big capacity empty with 
size    : 42							size    : 42
capacity: 1000							capacity: 1000
arr     :							arr     :
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 			7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 			7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 								7 7 

>>> action made: are_values_equal to above with 0 sevens	>>> action made: are_values_equal to above with 0 sevens
size    : 0							size    : 0
capacity: 1000							capacity: 1000
arr     :							arr     :


=====================push back test=====================	=====================push back test=====================

base_state: 42 vector filled with range				base_state: 42 vector filled with range

size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 
base_state: empty vector					base_state: empty vector

size    : 0							size    : 0
capacity: 0							capacity: 0
arr     :							arr     :

base_state: empty vector with 100 capacity			base_state: empty vector with 100 capacity

size    : 0							size    : 0
capacity: 1000							capacity: 1000
arr     :							arr     :


=====================push back test=====================	=====================push back test=====================


>>> action made: push back seven to empty			>>> action made: push back seven to empty
size    : 1							size    : 1
capacity: 1							capacity: 1
arr     :							arr     :
7 								7 

>>> action made: push back a val from the end of itself to fu	>>> action made: push back a val from the end of itself to fu
size    : 43							size    : 43
capacity: 84							capacity: 84
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 41 							40 41 41 

>>> action made: push back a seven to big cap empty		>>> action made: push back a seven to big cap empty
size    : 1							size    : 1
capacity: 1000							capacity: 1000
arr     :							arr     :
7 								7 

=====================pop back test=====================		=====================pop back test=====================

base_state: 42 vector filled with range				base_state: 42 vector filled with range

size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 
base_state: empty vector					base_state: empty vector

size    : 0							size    : 0
capacity: 0							capacity: 0
arr     :							arr     :

base_state: 10 vector filled with range				base_state: 10 vector filled with range

size    : 10							size    : 10
capacity: 10							capacity: 10
arr     :							arr     :
10 11 12 13 14 15 16 17 18 19 					10 11 12 13 14 15 16 17 18 19 

=====================pop back test=====================		=====================pop back test=====================


>>> action made: ten times pop back from full			>>> action made: ten times pop back from full
size    : 32							size    : 32
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 				20 21 22 23 24 25 26 27 28 29 30 31 

=====================small stuff test=====================	=====================small stuff test=====================


>>> action made: return size of above - size() test		>>> action made: return size of above - size() test
32								32

>>> action made: return size of above - max_size() test		>>> action made: return size of above - max_size() test
1152921504606846975						1152921504606846975

>>> action made: see whether n_val_ return is not null and co	>>> action made: see whether n_val_ return is not null and co
successfully compiled						successfully compiled

=====================swap test=====================		=====================swap test=====================


>>> action made: swap full and small				>>> action made: swap full and small
size    : 10							size    : 10
capacity: 10							capacity: 10
arr     :							arr     :
10 11 12 13 14 15 16 17 18 19 					10 11 12 13 14 15 16 17 18 19 
size    : 32							size    : 32
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 				20 21 22 23 24 25 26 27 28 29 30 31 

>>> action made: swap again with std swap(x, y)			>>> action made: swap again with std swap(x, y)
size    : 32							size    : 32
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 				20 21 22 23 24 25 26 27 28 29 30 31 
size    : 10							size    : 10
capacity: 10							capacity: 10
arr     :							arr     :
10 11 12 13 14 15 16 17 18 19 					10 11 12 13 14 15 16 17 18 19 

=====================insert value test=====================	=====================insert value test=====================

base_state: 42 vector filled with range				base_state: 42 vector filled with range

size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 
base_state: empty vector					base_state: empty vector

size    : 0							size    : 0
capacity: 0							capacity: 0
arr     :							arr     :

base_state: empty vector with 100 capacity			base_state: empty vector with 100 capacity

size    : 0							size    : 0
capacity: 1000							capacity: 1000
arr     :							arr     :


=====================insert value test=====================	=====================insert value test=====================


>>> action made: insert a seven to begin of full		>>> action made: insert a seven to begin of full
size    : 43							size    : 43
capacity: 84							capacity: 84
arr     :							arr     :
7 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 		7 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 
19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 	19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 
39 40 41 							39 40 41 

>>> action made: insert a seven to end of above			>>> action made: insert a seven to end of above
size    : 44							size    : 44
capacity: 84							capacity: 84
arr     :							arr     :
7 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 		7 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 
19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 	19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 
39 40 41 7 							39 40 41 7 

>>> action made: insert a seven to begin of big cap empty	>>> action made: insert a seven to begin of big cap empty
size    : 1							size    : 1
capacity: 1000							capacity: 1000
arr     :							arr     :
7 								7 

=====================insert value test=====================	=====================insert value test=====================


>>> action made: insert numbers to begin of empty		>>> action made: insert numbers to begin of empty
size    : 2							size    : 2
capacity: 2							capacity: 2
arr     :							arr     :
42 7 								42 7 

>>> action made: insert to begin of above a value from begin 	>>> action made: insert to begin of above a value from begin 
size    : 3							size    : 3
capacity: 4							capacity: 4
arr     :							arr     :
42 42 7 							42 42 7 

>>> action made: insert to end of above a value from end of i	>>> action made: insert to end of above a value from end of i
size    : 4							size    : 4
capacity: 4							capacity: 4
arr     :							arr     :
42 42 7 7 							42 42 7 7 

>>> action made: insert to begin of above a value from end of	>>> action made: insert to begin of above a value from end of
size    : 5							size    : 5
capacity: 8							capacity: 8
arr     :							arr     :
7 42 42 7 7 							7 42 42 7 7 

>>> action made: insert to end of above a value from begin of	>>> action made: insert to end of above a value from begin of
size    : 6							size    : 6
capacity: 8							capacity: 8
arr     :							arr     :
7 42 42 7 7 7 							7 42 42 7 7 7 

=====================insert fill test=====================	=====================insert fill test=====================

base_state: 42 vector filled with range				base_state: 42 vector filled with range

size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 
base_state: empty vector					base_state: empty vector

size    : 0							size    : 0
capacity: 0							capacity: 0
arr     :							arr     :

base_state: empty vector with 100 capacity			base_state: empty vector with 100 capacity

size    : 0							size    : 0
capacity: 1000							capacity: 1000
arr     :							arr     :


=====================insert fill test=====================	=====================insert fill test=====================


>>> action made: insert five sevens to begin of full		>>> action made: insert five sevens to begin of full
size    : 47							size    : 47
capacity: 84							capacity: 84
arr     :							arr     :
7 7 7 7 7 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 			7 7 7 7 7 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 	15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
35 36 37 38 39 40 41 						35 36 37 38 39 40 41 

>>> action made: insert five sevens to end of full		>>> action made: insert five sevens to end of full
size    : 52							size    : 52
capacity: 84							capacity: 84
arr     :							arr     :
7 7 7 7 7 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 			7 7 7 7 7 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 
15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 	15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 
35 36 37 38 39 40 41 7 7 7 7 7 					35 36 37 38 39 40 41 7 7 7 7 7 

>>> action made: insert five sevens to begin of big cap empty	>>> action made: insert five sevens to begin of big cap empty
size    : 5							size    : 5
capacity: 1000							capacity: 1000
arr     :							arr     :
7 7 7 7 7 							7 7 7 7 7 

=====================insert fill test=====================	=====================insert fill test=====================


>>> action made: insert numbers to begin of empty		>>> action made: insert numbers to begin of empty
size    : 2							size    : 2
capacity: 2							capacity: 2
arr     :							arr     :
42 7 								42 7 

>>> action made: insert to begin of above 5 times value from 	>>> action made: insert to begin of above 5 times value from 
size    : 7							size    : 7
capacity: 7							capacity: 7
arr     :							arr     :
42 42 42 42 42 42 7 						42 42 42 42 42 42 7 

>>> action made: insert to end of above 5 times value from en	>>> action made: insert to end of above 5 times value from en
size    : 12							size    : 12
capacity: 14							capacity: 14
arr     :							arr     :
42 42 42 42 42 42 7 7 7 7 7 7 					42 42 42 42 42 42 7 7 7 7 7 7 

>>> action made: insert to begin of above 5 times value from 	>>> action made: insert to begin of above 5 times value from 
size    : 17							size    : 17
capacity: 28							capacity: 28
arr     :							arr     :
7 7 7 7 7 42 42 42 42 42 42 7 7 7 7 7 7 			7 7 7 7 7 42 42 42 42 42 42 7 7 7 7 7 7 

>>> action made: insert to end of above 5 times value from be	>>> action made: insert to end of above 5 times value from be
size    : 22							size    : 22
capacity: 28							capacity: 28
arr     :							arr     :
7 7 7 7 7 42 42 42 42 42 42 7 7 7 7 7 7 7 7 7 			7 7 7 7 7 42 42 42 42 42 42 7 7 7 7 7 7 7 7 7 
7 7 								7 7 

=====================insert range test=====================	=====================insert range test=====================

base_state: 42 vector filled with range				base_state: 42 vector filled with range

size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 
base_state: empty vector					base_state: empty vector

size    : 0							size    : 0
capacity: 0							capacity: 0
arr     :							arr     :

base_state: empty vector with 100 capacity			base_state: empty vector with 100 capacity

size    : 0							size    : 0
capacity: 1000							capacity: 1000
arr     :							arr     :

base_state: 10 vector filled with range				base_state: 10 vector filled with range


=====================insert range test=====================	=====================insert range test=====================


>>> action made: insert to end of empty with range from full 	>>> action made: insert to end of empty with range from full 
size    : 32							size    : 32
capacity: 32							capacity: 32
arr     :							arr     :
5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 		5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 
25 26 27 28 29 30 31 32 33 34 35 36 				25 26 27 28 29 30 31 32 33 34 35 36 
size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 

>>> action made: insert to end of above with range from other	>>> action made: insert to end of above with range from other
size    : 52							size    : 52
capacity: 84							capacity: 84
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 10 11 12 13 14 15 16 17 18 19 				40 41 10 11 12 13 14 15 16 17 18 19 

>>> action made: insert to begin of big cap empty with range 	>>> action made: insert to begin of big cap empty with range 
size    : 10							size    : 10
capacity: 1000							capacity: 1000
arr     :							arr     :
10 11 12 13 14 15 16 17 18 19 					10 11 12 13 14 15 16 17 18 19 

=====================insert range test=====================	=====================insert range test=====================


>>> action made: insert to begin of small with range from its	>>> action made: insert to begin of small with range from its
size    : 20							size    : 20
capacity: 20							capacity: 20
arr     :							arr     :
10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 	10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 

>>> action made: insert to end of above with range from itsel	>>> action made: insert to end of above with range from itsel
size    : 40							size    : 40
capacity: 40							capacity: 40
arr     :							arr     :
10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 	10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 
10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 	10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 

>>> action made: insert to end of above with range from itsel	>>> action made: insert to end of above with range from itsel
size    : 74							size    : 74
capacity: 80							capacity: 80
arr     :							arr     :
10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 	10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 
10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 	10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 
13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 10 11 12 	13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 10 11 12 
13 14 15 16 17 18 19 10 11 12 13 14 15 16 			13 14 15 16 17 18 19 10 11 12 13 14 15 16 

>>> action made: try to insert to above from incorrect range 	>>> action made: try to insert to above from incorrect range 
size    : 74							size    : 74
capacity: 80							capacity: 80
arr     :							arr     :
10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 	10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 
10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 	10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 
13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 10 11 12 	13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 10 11 12 
13 14 15 16 17 18 19 10 11 12 13 14 15 16 			13 14 15 16 17 18 19 10 11 12 13 14 15 16 

>>> action made: try to insert to above from incorrect max si	>>> action made: try to insert to above from incorrect max si
size    : 74							size    : 74
capacity: 80							capacity: 80
arr     :							arr     :
10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 	10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 
10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 	10 11 12 13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 
13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 10 11 12 	13 14 15 16 17 18 19 10 11 12 13 14 15 16 17 18 19 10 11 12 
13 14 15 16 17 18 19 10 11 12 13 14 15 16 			13 14 15 16 17 18 19 10 11 12 13 14 15 16 

=====================erase test=====================		=====================erase test=====================

base_state: 42 vector filled with range				base_state: 42 vector filled with range

size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 
base_state: empty vector					base_state: empty vector

size    : 0							size    : 0
capacity: 0							capacity: 0
arr     :							arr     :


=====================erase test=====================		=====================erase test=====================


>>> action made: erase the beginning from 42 full vector	>>> action made: erase the beginning from 42 full vector
return value: 1							return value: 1
size    : 41							size    : 41
capacity: 42							capacity: 42
arr     :							arr     :
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 		1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 	21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 
41 								41 

>>> action made: erase the end from above			>>> action made: erase the end from above
return value is end						return value is end
size    : 40							size    : 40
capacity: 42							capacity: 42
arr     :							arr     :
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 		1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 
21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 	21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 

>>> action made: erase from the 10th element of above		>>> action made: erase from the 10th element of above
return value: 12						return value: 12
size    : 39							size    : 39
capacity: 42							capacity: 42
arr     :							arr     :
1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 		1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 
22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 	22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 

=====================erase range test (not correct range is u	=====================erase range test (not correct range is u


>>> action made: erase range from above and arithmetics		>>> action made: erase range from above and arithmetics
return value: 36						return value: 36
size    : 10							size    : 10
capacity: 42							capacity: 42
arr     :							arr     :
1 2 3 4 5 36 37 38 39 40 					1 2 3 4 5 36 37 38 39 40 

>>> action made: erase full range from above			>>> action made: erase full range from above
return value is end						return value is end
size    : 0							size    : 0
capacity: 42							capacity: 42
arr     :							arr     :


=====================clear test=====================		=====================clear test=====================

base_state: 42 vector filled with range				base_state: 42 vector filled with range

size    : 42							size    : 42
capacity: 42							capacity: 42
arr     :							arr     :
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 		0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 	20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 
40 41 								40 41 
base_state: empty vector					base_state: empty vector

size    : 0							size    : 0
capacity: 0							capacity: 0
arr     :							arr     :

base_state: empty vector with 100 capacity			base_state: empty vector with 100 capacity

size    : 0							size    : 0
capacity: 1000							capacity: 1000
arr     :							arr     :

base_state: 10 vector filled with range and 100 capacity	base_state: 10 vector filled with range and 100 capacity


=====================clear test=====================		=====================clear test=====================


>>> action made: clear empty					>>> action made: clear empty
size    : 0							size    : 0
capacity: 0							capacity: 0
arr     :							arr     :


>>> action made: clear big cap empty				>>> action made: clear big cap empty
size    : 0							size    : 0
capacity: 1000							capacity: 1000
arr     :							arr     :


>>> action made: clear full					>>> action made: clear full
size    : 0							size    : 0
capacity: 42							capacity: 42
arr     :							arr     :


>>> action made: clear big cap full				>>> action made: clear big cap full
size    : 0							size    : 0
capacity: 1000							capacity: 1000
arr     :							arr     :


=====================relational operators test===============	=====================relational operators test===============

base_state: 42 vector filled with sevens			base_state: 42 vector filled with sevens

base_state: empty vector					base_state: empty vector

base_state: empty vector with 100 capacity			base_state: empty vector with 100 capacity

base_state: 10 vector filled with sevens and 100 capacity	base_state: 10 vector filled with sevens and 100 capacity


=====================relational operators test===============	=====================relational operators test===============


>>> action made: are each of 4 vectors equal to themselves	>>> action made: are each of 4 vectors equal to themselves
1								1
1								1
1								1
1								1

>>> action made: are each of 4 vectors unequal to themselves	>>> action made: are each of 4 vectors unequal to themselves
0								0
0								0
0								0
0								0

>>> action made: test >						>>> action made: test >
empty > empty cap: 0						empty > empty cap: 0
empty_cap > empty: 0						empty_cap > empty: 0
testy > testy_cap: 1						testy > testy_cap: 1
testy_cap > testy: 0						testy_cap > testy: 0

>>> action made: test <						>>> action made: test <
empty < empty cap: 0						empty < empty cap: 0
empty_cap < empty: 0						empty_cap < empty: 0
testy < testy_cap: 0						testy < testy_cap: 0
testy_cap < testy: 1						testy_cap < testy: 1

>>> action made: test >=					>>> action made: test >=
empty >= empty cap: 1						empty >= empty cap: 1
empty_cap >= empty: 1						empty_cap >= empty: 1
testy >= testy_cap: 1						testy >= testy_cap: 1
testy_cap >= testy: 0						testy_cap >= testy: 0

>>> action made: test <=					>>> action made: test <=
empty <= empty cap: 1						empty <= empty cap: 1
empty_cap <= empty: 1						empty_cap <= empty: 1
testy <= testy_cap: 0						testy <= testy_cap: 0
testy_cap <= testy: 1						testy_cap <= testy: 1

=====================const iterators test====================	=====================const iterators test====================

base_state: 42 vector filled with range				base_state: 42 vector filled with range

base_state: 42 const vector filled with range and iterator	base_state: 42 const vector filled with range and iterator

0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23	0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23

>>> action made: compare end it with begin it			>>> action made: compare end it with begin it
comparison > : 1						comparison > : 1
comparison >= : 1						comparison >= : 1
comparison < : 0						comparison < : 0
comparison <= : 0						comparison <= : 0
comparison == : 0						comparison == : 0
difference: 41							difference: 41
it_begin + 1: 1							it_begin + 1: 1
1 + it_begin: 1							1 + it_begin: 1
++it_begin: 1							++it_begin: 1
--it_begin: 0							--it_begin: 0

>>> action made: test const reverse iterator from non const v	>>> action made: test const reverse iterator from non const v
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23	0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23

=====================reverse iterators test==================	=====================reverse iterators test==================

base_state: 42 vector filled with range				base_state: 42 vector filled with range

base_state: 42 const vector filled with range and reverse ite	base_state: 42 const vector filled with range and reverse ite

41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 2	41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 2

>>> action made: compare end it with begin it but now reverse	>>> action made: compare end it with begin it but now reverse
comparison > : 1						comparison > : 1
comparison >= : 1						comparison >= : 1
comparison < : 0						comparison < : 0
comparison <= : 0						comparison <= : 0
comparison == : 0						comparison == : 0
difference: 41							difference: 41
it_begin + 1: 40						it_begin + 1: 40
1 + it_begin: 40						1 + it_begin: 40
++it_begin: 40							++it_begin: 40
--it_begin: 41							--it_begin: 41

>>> action made: test const iterator from non const vector	>>> action made: test const iterator from non const vector
41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 2	41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 2
=====================vector relational operators test========	=====================vector relational operators test========

base_state: two vectors: big and small				base_state: two vectors: big and small

0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23	0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23

0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23	0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23


=====================vector relational operators test========	=====================vector relational operators test========


>>> action made: test comparison between vectors,  first is b	>>> action made: test comparison between vectors,  first is b
test operator > : 1						test operator > : 1
test operator >= : 1						test operator >= : 1
test operator < : 0						test operator < : 0
test operator <= : 0						test operator <= : 0
test operator == : 0						test operator == : 0
test operator != : 1						test operator != : 1

=====================const and non const iterators comparison	=====================const and non const iterators comparison

base_state: two vectors and two end iterators: bigger non con	base_state: two vectors and two end iterators: bigger non con

2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2	2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2  2

2  2  2  2  2  2  2  2  2  2  					2  2  2  2  2  2  2  2  2  2  

=====================const and non const iterators comparison	=====================const and non const iterators comparison


>>> action made: test comparison between vectors, first is bi	>>> action made: test comparison between vectors, first is bi
successfully compiled 						successfully compiled 

>>> action made: now same thing but reverse iterators end rbe	>>> action made: now same thing but reverse iterators end rbe
successfully compiled 						successfully compiled 

=====================Map tests=====================		=====================Map tests=====================


=====================Map construction test===================	=====================Map construction test===================


>>> action made: default constructed Map			>>> action made: default constructed Map
empty: 0 size: 10						empty: 0 size: 10
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7
key: 8 val: 8 | key: 9 val: 9 | 				key: 8 val: 8 | key: 9 val: 9 | 


>>> action made: assign_node_no_value constructed Map		>>> action made: assign_node_no_value constructed Map
empty: 0 size: 10						empty: 0 size: 10
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7
key: 8 val: 8 | key: 9 val: 9 | 				key: 8 val: 8 | key: 9 val: 9 | 


>>> action made: range constructed Map from 1 to 9		>>> action made: range constructed Map from 1 to 9
empty: 0 size: 8						empty: 0 size: 8
Map:								Map:
key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3 | key: 4 val: 4	key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3 | key: 4 val: 4
key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7 | key: 8 val: 8	key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7 | key: 8 val: 8


=====================Map iterator test=====================	=====================Map iterator test=====================

base_state: Map with 10 range					base_state: Map with 10 range

empty: 0 size: 10						empty: 0 size: 10
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7
key: 8 val: 8 | key: 9 val: 9 | 				key: 8 val: 8 | key: 9 val: 9 | 


>>> action made: create begin and --end iterators, show them	>>> action made: create begin and --end iterators, show them
key: 0 val: 0							key: 0 val: 0
key: 9 val: 9							key: 9 val: 9

>>> action made: ++begin and show via *				>>> action made: ++begin and show via *
key: 1 val: 1							key: 1 val: 1
show via -> : 1							show via -> : 1

>>> action made: comparison of iterators equal and unequal to	>>> action made: comparison of iterators equal and unequal to
it == it							it == it
!(it != it)							!(it != it)

=====================Map const iterator test=================	=====================Map const iterator test=================


>>> action made: take begin const from non const and show it	>>> action made: take begin const from non const and show it
show key via -> : 0					      |	show key via -> : 10
show value via * : 0					      |	show value via * : 1885424930

>>> action made: arithmetics and comparison but now const	>>> action made: arithmetics and comparison but now const
show key after ++ : 0					      |	show key after ++ : 1
show key after -- : 0						show key after -- : 0
const == const							const == const
!(const != const)						!(const != const)

=====================Map reverse iterator test===============	=====================Map reverse iterator test===============


>>> action made: create reverse begin and reverse --end itera	>>> action made: create reverse begin and reverse --end itera
show begin key via -> : 9					show begin key via -> : 9
show begin value via * : 9					show begin value via * : 9
show end key via -> : 0						show end key via -> : 0
show end value via * : 0					show end value via * : 0

>>> action made: reverse ++begin and show			>>> action made: reverse ++begin and show
show key via -> : 8						show key via -> : 8
show value via * : 8						show value via * : 8

>>> action made: comparison of reverse iterators equal and un	>>> action made: comparison of reverse iterators equal and un
reverse_it == reverse_it					reverse_it == reverse_it
!(reverse_it != reverse_it)					!(reverse_it != reverse_it)

=====================Map const reverse iterator test=========	=====================Map const reverse iterator test=========


>>> action made: take const reverse from non const reverse an	>>> action made: take const reverse from non const reverse an
show key via -> : 9						show key via -> : 9
show value via * : 9						show value via * : 9

>>> action made: arithmetics and comparison but now const rev	>>> action made: arithmetics and comparison but now const rev
show key after ++ : 8						show key after ++ : 8
show key after -- : 9						show key after -- : 9
reverse_const == reverse_const					reverse_const == reverse_const
!(reverse_const != reverse_const)				!(reverse_const != reverse_const)

=====================Map small stuff test====================	=====================Map small stuff test====================

base_state: Map with 10 range					base_state: Map with 10 range

empty: 0 size: 10						empty: 0 size: 10
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7
key: 8 val: 8 | key: 9 val: 9 | 				key: 8 val: 8 | key: 9 val: 9 | 

base_state: Map with 15 range					base_state: Map with 15 range

empty: 0 size: 14						empty: 0 size: 14
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 8 val: 8	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 8 val: 8
key: 9 val: 9 | key: 10 val: 10 | key: 11 val: 11 | key: 12 v	key: 9 val: 9 | key: 10 val: 10 | key: 11 val: 11 | key: 12 v
key: 13 val: 13 | key: 14 val: 14 | 				key: 13 val: 13 | key: 14 val: 14 | 


>>> action made: swap full and big				>>> action made: swap full and big
empty: 0 size: 14						empty: 0 size: 14
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 8 val: 8	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 8 val: 8
key: 9 val: 9 | key: 10 val: 10 | key: 11 val: 11 | key: 12 v	key: 9 val: 9 | key: 10 val: 10 | key: 11 val: 11 | key: 12 v
key: 13 val: 13 | key: 14 val: 14 | 				key: 13 val: 13 | key: 14 val: 14 | 

empty: 0 size: 10						empty: 0 size: 10
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7
key: 8 val: 8 | key: 9 val: 9 | 				key: 8 val: 8 | key: 9 val: 9 | 


>>> action made: swap again with std swap(x, y)			>>> action made: swap again with std swap(x, y)
empty: 0 size: 10						empty: 0 size: 10
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7
key: 8 val: 8 | key: 9 val: 9 | 				key: 8 val: 8 | key: 9 val: 9 | 

empty: 0 size: 14						empty: 0 size: 14
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 8 val: 8	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 8 val: 8
key: 9 val: 9 | key: 10 val: 10 | key: 11 val: 11 | key: 12 v	key: 9 val: 9 | key: 10 val: 10 | key: 11 val: 11 | key: 12 v
key: 13 val: 13 | key: 14 val: 14 | 				key: 13 val: 13 | key: 14 val: 14 | 


>>> action made: compare keys with key compare from full	>>> action made: compare keys with key compare from full
is 1 less then 2 bool: 1					is 1 less then 2 bool: 1

>>> action made: compare values with value compare from full	>>> action made: compare values with value compare from full
is pair(1, test(1)) less then pair(1, test(1))  bool: 0		is pair(1, test(1)) less then pair(1, test(1))  bool: 0

=====================Map small stuff test====================	=====================Map small stuff test====================


>>> action made: max size					>>> action made: max size
max size: 768614336404564650				      |	max size: 329406144173384850

>>> action made: [] operator test with existing element		>>> action made: [] operator test with existing element
return from [2]: 2						return from [2]: 2
empty: 0 size: 10						empty: 0 size: 10
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7
key: 8 val: 8 | key: 9 val: 9 | 				key: 8 val: 8 | key: 9 val: 9 | 


>>> action made: [] operator test with not existing element	>>> action made: [] operator test with not existing element
return from [102]: 0						return from [102]: 0
empty: 0 size: 11						empty: 0 size: 11
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7
key: 8 val: 8 | key: 9 val: 9 | key: 102 val: 0 | 		key: 8 val: 8 | key: 9 val: 9 | key: 102 val: 0 | 


>>> action made: at with existing element			>>> action made: at with existing element
return from at 2: 2						return from at 2: 2

>>> action made: at with not existing element			>>> action made: at with not existing element
map::at:  key not found						map::at:  key not found
empty: 0 size: 11						empty: 0 size: 11
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7
key: 8 val: 8 | key: 9 val: 9 | key: 102 val: 0 | 		key: 8 val: 8 | key: 9 val: 9 | key: 102 val: 0 | 


=====================Map insert test=====================	=====================Map insert test=====================

base_state: Map with 10 range					base_state: Map with 10 range

empty: 0 size: 10						empty: 0 size: 10
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7
key: 8 val: 8 | key: 9 val: 9 | 				key: 8 val: 8 | key: 9 val: 9 | 

base_state: Map with 15 range					base_state: Map with 15 range

empty: 0 size: 14						empty: 0 size: 14
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 8 val: 8	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 8 val: 8
key: 9 val: 9 | key: 10 val: 10 | key: 11 val: 11 | key: 12 v	key: 9 val: 9 | key: 10 val: 10 | key: 11 val: 11 | key: 12 v
key: 13 val: 13 | key: 14 val: 14 | 				key: 13 val: 13 | key: 14 val: 14 | 

base_state: empty Map						base_state: empty Map

empty: 1 size: 0						empty: 1 size: 0
Map:								Map:



>>> action made: insert 42 val to empty				>>> action made: insert 42 val to empty
empty: 0 size: 1						empty: 0 size: 1
Map:								Map:
key: 42 val: 42 | 						key: 42 val: 42 | 

return iterator key: 42						return iterator key: 42
return iterator value: 42					return iterator value: 42
return bool: 1							return bool: 1

>>> action made: insert existing 7 val to full			>>> action made: insert existing 7 val to full
empty: 0 size: 10						empty: 0 size: 10
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7
key: 8 val: 8 | key: 9 val: 9 | 				key: 8 val: 8 | key: 9 val: 9 | 

return iterator key: 7						return iterator key: 7
return iterator value: 7					return iterator value: 7
return bool: 0							return bool: 0

>>> action made: insert non existing 42 val to full		>>> action made: insert non existing 42 val to full
empty: 0 size: 11						empty: 0 size: 11
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7
key: 8 val: 8 | key: 9 val: 9 | key: 42 val: 42 | 		key: 8 val: 8 | key: 9 val: 9 | key: 42 val: 42 | 

return iterator key: 42						return iterator key: 42
return iterator value: 42					return iterator value: 42
return bool: 1							return bool: 1

>>> action made: insert range from bigger (15) to above		>>> action made: insert range from bigger (15) to above
empty: 0 size: 16						empty: 0 size: 16
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7
key: 8 val: 8 | key: 9 val: 9 | key: 10 val: 10 | key: 11 val	key: 8 val: 8 | key: 9 val: 9 | key: 10 val: 10 | key: 11 val
key: 12 val: 12 | key: 13 val: 13 | key: 14 val: 14 | key: 42	key: 12 val: 12 | key: 13 val: 13 | key: 14 val: 14 | key: 42


>>> action made: insert existing 42 with right_ position to a	>>> action made: insert existing 42 with right_ position to a
return: 42							return: 42
empty: 0 size: 16						empty: 0 size: 16
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7
key: 8 val: 8 | key: 9 val: 9 | key: 10 val: 10 | key: 11 val	key: 8 val: 8 | key: 9 val: 9 | key: 10 val: 10 | key: 11 val
key: 12 val: 12 | key: 13 val: 13 | key: 14 val: 14 | key: 42	key: 12 val: 12 | key: 13 val: 13 | key: 14 val: 14 | key: 42


>>> action made: insert not existing 21 with wrong position t	>>> action made: insert not existing 21 with wrong position t
return: 21							return: 21
empty: 0 size: 17						empty: 0 size: 17
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7
key: 8 val: 8 | key: 9 val: 9 | key: 10 val: 10 | key: 11 val	key: 8 val: 8 | key: 9 val: 9 | key: 10 val: 10 | key: 11 val
key: 12 val: 12 | key: 13 val: 13 | key: 14 val: 14 | key: 21	key: 12 val: 12 | key: 13 val: 13 | key: 14 val: 14 | key: 21
key: 42 val: 42 | 						key: 42 val: 42 | 


>>> action made: insert not existing 43 with right_ position 	>>> action made: insert not existing 43 with right_ position 
return: 43							return: 43
empty: 0 size: 18						empty: 0 size: 18
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7
key: 8 val: 8 | key: 9 val: 9 | key: 10 val: 10 | key: 11 val	key: 8 val: 8 | key: 9 val: 9 | key: 10 val: 10 | key: 11 val
key: 12 val: 12 | key: 13 val: 13 | key: 14 val: 14 | key: 21	key: 12 val: 12 | key: 13 val: 13 | key: 14 val: 14 | key: 21
key: 42 val: 42 | key: 43 val: 43 | 				key: 42 val: 42 | key: 43 val: 43 | 


>>> action made: insert 42 with position to empty		>>> action made: insert 42 with position to empty
return: 42							return: 42
empty: 0 size: 1						empty: 0 size: 1
Map:								Map:
key: 42 val: 42 | 						key: 42 val: 42 | 


=====================Map erase test=====================	=====================Map erase test=====================

base_state: Map with 10 range					base_state: Map with 10 range

empty: 0 size: 10						empty: 0 size: 10
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7
key: 8 val: 8 | key: 9 val: 9 | 				key: 8 val: 8 | key: 9 val: 9 | 

base_state: Map with 15 range					base_state: Map with 15 range

empty: 0 size: 14						empty: 0 size: 14
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 8 val: 8	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 8 val: 8
key: 9 val: 9 | key: 10 val: 10 | key: 11 val: 11 | key: 12 v	key: 9 val: 9 | key: 10 val: 10 | key: 11 val: 11 | key: 12 v
key: 13 val: 13 | key: 14 val: 14 | 				key: 13 val: 13 | key: 14 val: 14 | 

base_state: empty Map						base_state: empty Map

empty: 1 size: 0						empty: 1 size: 0
Map:								Map:



>>> action made: erase ++begin from full 10			>>> action made: erase ++begin from full 10
empty: 0 size: 9						empty: 0 size: 9
Map:								Map:
key: 0 val: 0 | key: 2 val: 2 | key: 3 val: 3 | key: 4 val: 4	key: 0 val: 0 | key: 2 val: 2 | key: 3 val: 3 | key: 4 val: 4
key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7 | key: 8 val: 8	key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7 | key: 8 val: 8
key: 9 val: 9 | 						key: 9 val: 9 | 


>>> action made: erase not existing 2 key from above		>>> action made: erase not existing 2 key from above
empty: 0 size: 8						empty: 0 size: 8
Map:								Map:
key: 0 val: 0 | key: 3 val: 3 | key: 4 val: 4 | key: 5 val: 5	key: 0 val: 0 | key: 3 val: 3 | key: 4 val: 4 | key: 5 val: 5
key: 6 val: 6 | key: 7 val: 7 | key: 8 val: 8 | key: 9 val: 9	key: 6 val: 6 | key: 7 val: 7 | key: 8 val: 8 | key: 9 val: 9


=====================Map erase test=====================	=====================Map erase test=====================


>>> action made: erase existing 7 key from above		>>> action made: erase existing 7 key from above
empty: 0 size: 7						empty: 0 size: 7
Map:								Map:
key: 0 val: 0 | key: 3 val: 3 | key: 4 val: 4 | key: 5 val: 5	key: 0 val: 0 | key: 3 val: 3 | key: 4 val: 4 | key: 5 val: 5
key: 6 val: 6 | key: 8 val: 8 | key: 9 val: 9 | 		key: 6 val: 6 | key: 8 val: 8 | key: 9 val: 9 | 


>>> action made: erase range from ++begin to --end from above	>>> action made: erase range from ++begin to --end from above
empty: 0 size: 2						empty: 0 size: 2
Map:								Map:
key: 0 val: 0 | key: 9 val: 9 | 				key: 0 val: 0 | key: 9 val: 9 | 


>>> action made: erase full range from empty			>>> action made: erase full range from empty
empty: 1 size: 0						empty: 1 size: 0
Map:								Map:



>>> action made: erase full range from full 15			>>> action made: erase full range from full 15
empty: 1 size: 0						empty: 1 size: 0
Map:								Map:



=====================Map operations test=====================	=====================Map operations test=====================

base_state: Map with 10 range					base_state: Map with 10 range

empty: 0 size: 10						empty: 0 size: 10
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7
key: 8 val: 8 | key: 9 val: 9 | 				key: 8 val: 8 | key: 9 val: 9 | 

base_state: empty Map						base_state: empty Map

empty: 1 size: 0						empty: 1 size: 0
Map:								Map:



>>> action made: find key 5 in 10 map and show iterator and n	>>> action made: find key 5 in 10 map and show iterator and n
key: 5 val: 5							key: 5 val: 5
key: 6 val: 6							key: 6 val: 6

>>> action made: same but now const				>>> action made: same but now const
iterator key: 5							iterator key: 5
++iterator key: 6						++iterator key: 6

>>> action made: find not existing key 42 in 10 map and show 	>>> action made: find not existing key 42 in 10 map and show 
key: 9 val: 9							key: 9 val: 9

>>> action made: find existing key 5 in 10 map and show the r	>>> action made: find existing key 5 in 10 map and show the r
1								1

>>> action made: find not existing key 42 in 10 map and show 	>>> action made: find not existing key 42 in 10 map and show 
0								0

>>> action made: show lower and upper bound and equal range i	>>> action made: show lower and upper bound and equal range i
lower bound: key: 5 val: 5					lower bound: key: 5 val: 5
upper bound: key: 6 val: 6					upper bound: key: 6 val: 6
equal range: lower bound: key: 5 val: 5				equal range: lower bound: key: 5 val: 5
upper bound: key: 6 val: 6					upper bound: key: 6 val: 6

>>> action made: same but now const				>>> action made: same but now const
lower bound: iterator key: 5					lower bound: iterator key: 5
upper bound: iterator key: 6					upper bound: iterator key: 6
equal range: lower bound: iterator key: 5			equal range: lower bound: iterator key: 5
upper bound: iterator key: 6					upper bound: iterator key: 6

>>> action made: show lower and upper bound and equal range -	>>> action made: show lower and upper bound and equal range -
lower bound: key: 9 val: 9					lower bound: key: 9 val: 9
upper bound: key: 9 val: 9					upper bound: key: 9 val: 9
equal range: lower bound: key: 9 val: 9				equal range: lower bound: key: 9 val: 9
upper bound: key: 9 val: 9					upper bound: key: 9 val: 9

=====================map relational operators test===========	=====================map relational operators test===========

base_state: Map with 10 range					base_state: Map with 10 range

empty: 0 size: 10						empty: 0 size: 10
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 7 val: 7
key: 8 val: 8 | key: 9 val: 9 | 				key: 8 val: 8 | key: 9 val: 9 | 

base_state: Map with 15 range (testy big)			base_state: Map with 15 range (testy big)

empty: 0 size: 14						empty: 0 size: 14
Map:								Map:
key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3	key: 0 val: 0 | key: 1 val: 1 | key: 2 val: 2 | key: 3 val: 3
key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 8 val: 8	key: 4 val: 4 | key: 5 val: 5 | key: 6 val: 6 | key: 8 val: 8
key: 9 val: 9 | key: 10 val: 10 | key: 11 val: 11 | key: 12 v	key: 9 val: 9 | key: 10 val: 10 | key: 11 val: 11 | key: 12 v
key: 13 val: 13 | key: 14 val: 14 | 				key: 13 val: 13 | key: 14 val: 14 | 

base_state: empty Map						base_state: empty Map

empty: 1 size: 0						empty: 1 size: 0
Map:								Map:



=====================relational operators test===============	=====================relational operators test===============


>>> action made: are each of 3 vectors equal to themselves	>>> action made: are each of 3 vectors equal to themselves
1								1
1								1
1								1

>>> action made: are each of 3 vectors unequal to themselves	>>> action made: are each of 3 vectors unequal to themselves
0								0
0								0
0								0

>>> action made: test >						>>> action made: test >
empty > empty cap: 0						empty > empty cap: 0
testy > testy_big: 0						testy > testy_big: 0
testy_big > testy: 1						testy_big > testy: 1

>>> action made: test <						>>> action made: test <
empty < empty: 0						empty < empty: 0
testy < testy_big: 1						testy < testy_big: 1
testy_big < testy: 0						testy_big < testy: 0

>>> action made: test >=					>>> action made: test >=
empty >= empty: 1						empty >= empty: 1
testy >= testy_big: 0						testy >= testy_big: 0
testy_big >= testy: 1						testy_big >= testy: 1

>>> action made: test <=					>>> action made: test <=
empty <= empty: 1						empty <= empty: 1
testy <= testy_big: 1						testy <= testy_big: 1
testy_big <= testy: 0						testy_big <= testy: 0
